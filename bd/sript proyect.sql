CREATE DATABASE ODONTOLOGIA;
USE ODONTOLOGIA;

CREATE TABLE PUESTO(
ID_PUESTO INT AUTO_INCREMENT,
DES_PUESTO VARCHAR (80) NOT NULL,
CONSTRAINT PK_PUESTO PRIMARY KEY(ID_PUESTO)
);
CREATE TABLE TRABAJADOR(
ID_TRABAJADOR INT AUTO_INCREMENT,
NOM VARCHAR (80) NOT NULL,
PRIMER_APE VARCHAR (80) NOT NULL,
SEGUNDO_APE VARCHAR (80) NOT NULL,
FECHA_NACIMIENTO VARCHAR(80) NOT NULL,
ID_PUESTO INT NOT NULL,
EMAIL VARCHAR (80) NOT NULL,
CELULAR DECIMAL(10,0) NOT NULL,
FECHA_INGRESO DATE NOT NULL,
SUELDO DECIMAL(18,2) NOT NULL,
USERNAME VARCHAR(50) NOT NULL,
CONTRASENA VARCHAR(80) NOT NULL,
CONSTRAINT PK_TRABAJADOR PRIMARY KEY (ID_TRABAJADOR),
CONSTRAINT FK_TRAB_PUEST foreign key(ID_PUESTO) references PUESTO (ID_PUESTO)
);
CREATE TABLE PACIENTE(
ID_PACIENTE INT AUTO_INCREMENT NOT NULL,
NOMBRE VARCHAR (80),
PRIMER_APE VARCHAR (80) NOT NULL,
SEGUNDO_APE VARCHAR (80) NOT NULL,
EMAIL VARCHAR (80) NOT NULL,
CELULAR DECIMAL(10,0) NOT NULL,
FECHA_REGISTRO DATE NOT NULL,
CONSTRAINT PK_PACIENTE PRIMARY KEY(ID_PACIENTE)
);
CREATE TABLE ESTADO(
ID_ESTADO INT AUTO_INCREMENT,
DES_ESTADO VARCHAR (80) NOT NULL,
CONSTRAINT PK_ESTADO PRIMARY KEY(ID_ESTADO)
);
CREATE TABLE RESERVA(
ID_RE INT AUTO_INCREMENT NOT NULL,
ID_PACIENTE INT NOT NULL,
FECHA DATE NOT NULL,
HORA TIME NOT NULL,
ID_ESTADO INT,
PRECIO DECIMAL(10, 2),
CONSTRAINT PK_RESERVA PRIMARY KEY(ID_RE),
CONSTRAINT FK_RE_PAC FOREIGN KEY(ID_PACIENTE) REFERENCES PACIENTE(ID_PACIENTE),
CONSTRAINT FK_RE_ES FOREIGN KEY (ID_ESTADO) REFERENCES ESTADO(ID_ESTADO)
);
CREATE TABLE CITA(
ID_CITA INT AUTO_INCREMENT NOT NULL,
ID_RE INT NOT NULL,
ID_PACIENTE INT NOT NULL,
ID_TRABAJADOR INT NOT NULL,
SALA INT,
CONSTRAINT FK_CITA_TRAB FOREIGN KEY(ID_TRABAJADOR) REFERENCES TRABAJADOR (ID_TRABAJADOR),
CONSTRAINT FK_CITA_PAC FOREIGN KEY(ID_PACIENTE) REFERENCES PACIENTE (ID_PACIENTE),
CONSTRAINT FK_CITA_RE FOREIGN KEY (ID_RE) REFERENCES RESERVA(ID_RE),
CONSTRAINT PK_CITA PRIMARY KEY (ID_CITA)
);
CREATE TABLE HISTORIAL(
ID_HIST INT auto_increment NOT NULL,
ID_PACIENTE INT NOT NULL,
DESCRIPCION VARCHAR(500),
ID_TRABAJADOR INT,
CONSTRAINT FK_HIST_PAC FOREIGN KEY(ID_PACIENTE) REFERENCES PACIENTE (ID_PACIENTE),
CONSTRAINT FK_HIST_TRAB FOREIGN KEY(ID_TRABAJADOR) REFERENCES TRABAJADOR (ID_TRABAJADOR),
CONSTRAINT PK_HIST PRIMARY KEY (ID_HIST)
);
INSERT INTO PUESTO (DES_PUESTO) VALUES('Odontólogo(a) Estético'),('Odontólogo(a) Preventiva'),('Odontólogo(a) Infantil'),('Recepcionista');
INSERT INTO TRABAJADOR (NOM, PRIMER_APE,SEGUNDO_APE,FECHA_NACIMIENTO,ID_PUESTO,EMAIL,CELULAR,FECHA_INGRESO,SUELDO,USERNAME,CONTRASENA) 
VALUES('JEFFERSON','PANTA','RUIZ','2003-12-20',1,'PANTAJEFFERSON173@GMAIL.COM',982747292,CURDATE(),3000,'PANTAX','PANTAX123'),
('Jesus','Natividad','Toribio','2002-09-10',2,'JesusNatDota@GMAIL.COM',967435143,'2020-01-01',2500,'NATJES','NATJES123'),
('Antony','Lipe','Vivanco','2001-05-10',3,'lipevivancoa123@GMAIL.COM',765342651,'2018-05-05',3000,'ALARAKO','ARALAKO123'),
('Harold','Chavez','Nats','2000-01-13',4,'NatsManco@GMAIL.COM',912303184,'2022-03-01',1500,'NATSFIT','NATSFIT123');
INSERT INTO PACIENTE (NOMBRE, PRIMER_APE,SEGUNDO_APE, EMAIL, CELULAR, FECHA_REGISTRO) VALUES('MARCELO','CARRASCO','GARCIA','CARRASCO@GMAIL.COM',987456423,CURDATE());
INSERT INTO PACIENTE (NOMBRE, PRIMER_APE,SEGUNDO_APE, EMAIL, CELULAR, FECHA_REGISTRO) VALUES('Harold','Chavez','Nats','NatsFitness@GMAIL.COM',987654321,CURDATE());
INSERT INTO ESTADO (DES_ESTADO) VALUES ('ACTIVA'),('ANULADA');
INSERT INTO RESERVA (ID_PACIENTE,FECHA,HORA,ID_ESTADO,PRECIO) VALUES(1,'2023-11-15','14:00',1,30);
INSERT INTO CITA (ID_RE,ID_PACIENTE,ID_TRABAJADOR,SALA) VALUES(1,1,1,2);
INSERT INTO HISTORIAL (ID_PACIENTE,DESCRIPCION,ID_TRABAJADOR) VALUES(1,'Curación de 2 dientes de nivel leve',2);
select *from reserva
SELECT ID_RE, ID_PACIENTE, FECHA, HORA, ID_ESTADO, 
		CASE ID_ESTADO
		WHEN 1  THEN 'ACTIVA'
        ELSE 'ANULADA' 
        END AS ESTADO,
        PRECIO FROM RESERVA
 SELECT ID_RE, ID_PACIENTE, FECHA, HORA, ID_ESTADO, 
		CASE ID_ESTADO
		WHEN 1  THEN 'ACTIVA'
        ELSE 'ANULADA' 
        END AS ESTADO,
        PRECIO FROM RESERVA WHERE ID_RE=1       

delimiter //
create   procedure validaAcceso(IN usuariop VARCHAR(50),IN contrasenap VARCHAR(50))
begin
    SELECT ID_TRABAJADOR
	,NOM
	,PRIMER_APE
    ,SEGUNDO_APE
    ,FECHA_NACIMIENTO,
    CASE ID_PUESTO
		WHEN 1 THEN 'Odontólogo(a)'
        ELSE 'Secretario(a)'
	END AS "PUESTO"
    ,EMAIL
    ,CELULAR
    ,FECHA_INGRESO
    ,SUELDO
    ,USERNAME
    ,CONTRASENA FROM TRABAJADOR
     where USERNAME=usuariop and CONTRASENA=contrasenap;
end
//

call validaAcceso('PANTAX','PANTAX123');

SELECT C.ID_CITA, C.ID_RE, R.FECHA, R.HORA,CONCAT (P.NOMBRE,' ',P.PRIMER_APE,' ',P.SEGUNDO_APE) AS PACIENTE, 
CONCAT (T.NOM,' ',T.PRIMER_APE,' ',T.SEGUNDO_APE) AS TRABAJADOR, 
CASE T.ID_PUESTO 
WHEN 1 THEN 'Odontólogo(a)' 
WHEN 2 THEN 'Odontólogo(a) Preventiva' 
WHEN 3 THEN 'Odontólogo(a) Infantil' 
ELSE 'Recepcionista'
END
AS PUESTO, C.SALA
FROM PACIENTE P
INNER JOIN RESERVA R ON P.ID_PACIENTE=R.ID_PACIENTE
INNER JOIN CITA C ON R.ID_RE=C.ID_RE
INNER JOIN TRABAJADOR T ON C.ID_TRABAJADOR=T.ID_TRABAJADOR